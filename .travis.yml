# Basic runner configuration 
os: linux
language: android
sudo: true # Required for the new container-based infrastructure setup

# Setup environment variables
env:
  global:
    - GRADLE_USER_HOME=${TRAVIS_BUILD_DIR}/gradle
    - ANDROID_HOME=${TRAVIS_BUILD_DIR}/android-sdk
    - SDK=${TRAVIS_BUILD_DIR}/android-sdk
    - OLD_SDK=/usr/local/android-sdk-25.0.2
    - PATH=${GRADLE_USER_HOME}/bin/:${SDK}/:${SDK}/tools/:${SDK}/platform-tools/:${PATH}

# Copy over the old SDK (create if doesn't exist)
before_install:
  - mkdir -p ${SDK}
  - mkdir -p ${OLD_SDK}/tools
  - mkdir -p ${OLD_SDK}/platforms
  - mkdir -p ${OLD_SDK}/system-images
  - mkdir -p ${OLD_SDK}/platform-tools
  - cp -u -R ${OLD_SDK}/tools ${SDK}/tools
  - cp -u -R ${OLD_SDK}/platforms ${SDK}/platforms
  - cp -u -R ${OLD_SDK}/system-images ${SDK}/system-images
  - cp -u -R ${OLD_SDK}/platform-tools ${SDK}/platform-tools

# Enable only JDK 8, source does not build with JDK 7
addons:
  apt:
    packages:
      - oracle-java8-installer
jdk: oraclejdk8

# ************************************************* #
#                                                   #
# Don't forget to check versions in '/build.gradle' #
#                                                   #
# ************************************************* #

# Pre-configuration step (accept all licenses manually)
install:
  - echo y | android update sdk -u -a -t tools
  - echo y | android update sdk -u -a -t platform-tools-25.0.4
  - echo y | android update sdk -u -a -t build-tools-25.0.2
  - echo y | android update sdk -u -a -t android-25
  - echo y | android update sdk -u -a -t extra-google-m2repository
  - echo y | android update sdk -u -a -t extra-android-m2repository
  - echo y | android update sdk -u -a -t extra-google-android-support
  - echo y | android update sdk -u -a -t addon-google_apis-google-25
 
# Configure Android
android:
  # Auto-accept these licenses
  licenses:
    - 'android-sdk-preview-license-.+'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
    - '.+'
    
  # Build script config
  components:
    - tools # Workaround part 1: Get the new `repository-*.xml`
    - tools # Workaround part 1: Install latest Android SDK tools
    - build-tools-25.0.2
    - platform-tools-25.0.4
    
    # Compile SDK
    - android-25

    # Additional components
    - extra-google-m2repository
    - extra-android-m2repository
    - extra-google-android-support

    # To run emulator(s) during tests, enable these:
    # - sys-img-armeabi-v7a-android-25
    # - sys-img-armeabi-v7a-android-21
    # - sys-img-armeabi-v7a-android-19
    # - sys-img-armeabi-v7a-android-14
    # - sys-img-armeabi-v7a-android-9
    
# Use Gradle's cache (unlock on start)
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/
cache:
  apt: true
  directories:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache
    - ${TRAVIS_BUILD_DIR}/gradle/caches/
    - ${TRAVIS_BUILD_DIR}/gradle/wrapper/dists/
    - ${TRAVIS_BUILD_DIR}/android-sdk/extras/
    
# Execute the script
script:
  - ./gradlew clean
  - ./gradlew sillyandroid:build
  - ./gradlew sillyandroid:test
  - ./gradlew demo:build
  - ./gradlew demo:assembleDebug # release?
  - ./gradlew demo:check 
  - ./gradlew demo:test
  # - ./gradlew demo:connectedCheck # need an emulator for this
  
